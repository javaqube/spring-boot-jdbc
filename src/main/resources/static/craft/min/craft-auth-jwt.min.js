(function(){"use strict";angular.module("craft.auth.jwt",["craft.auth.JwtAuthService","craft.auth.JwtTokenInterceptor","craft.auth.token"]),angular.module("craft.auth.jwt").run(["$rootScope","JwtAuthService","$state",function(e,t,o){e.$on("$stateChangeStart",function(e,n,r,a,u,i){n.name.indexOf("auth")>-1||t.isLoggedIn()||t.isLoggedIn()||(e.preventDefault(),o.go("auth.login",{location:!0,reload:!0}))})}]),angular.module("craft.auth.jwt").controller("UserProfileCtrl",function(e,t,o,n,r){e.login=function(){console.log("login",e.user),t.post(o.getAppConfig().RootPath+"/auth",e.user).then(function(e){console.log(e),n.saveToken(o.getAppConfig().authTokenName,e.token),r.go("home.default")},function(e){console.log(e)})},e.isLoggedIn=function(){var e=n.getToken(o.getAppConfig().authTokenName);if(e){var t=JSON.parse(atob(e.split(".")[1]));return t.exp>Date.now()/1e3}return!1},e.currentUser=function(){if(this.isLoggedIn()){var e=n.getToken(o.getAppConfig().authTokenName),t=JSON.parse(atob(e.split(".")[1]));return{email:t.email,name:t.sub}}},e.logout=function(){console.log("logout"),n.removeToken(o.getAppConfig().authTokenName),r.go("auth.login",{location:!0,reload:!0})}})}).call(this),function(){"use strict";function e(e,t,o,n){var r=angular.extend({});return r.isLoggedIn=function(){var o=e.getToken(t.getAppConfig().authTokenName);if(o){var n=JSON.parse(atob(o.split(".")[1]));return n.exp>Date.now()/1e3}return!1},r.currentUser=function(){if(this.isLoggedIn()){var o=e.getToken(t.getAppConfig().authTokenName),n=JSON.parse(atob(o.split(".")[1]));return{email:n.email,name:n.name}}},r.logout=function(){e.removeToken(t.getAppConfig().authTokenName)},r.logon=function(r,a,u){var i=o.defer(),c={username:r,password:a,verifyCode:u};return n.post(t.getAppConfig().RootPath+"/logon",JSON.stringify(c)).then(function(o){console.log(o),e.saveToken(t.getAppConfig().authTokenName,o),i.resolve("logon success")},function(e){console.log(e),i.reject("logon failed")}),i.promise},r}angular.module("craft.auth.JwtAuthService",["craft.auth.token"]).factory("JwtAuthService",e),e.$inject=["TokenService","ConfigService","$q","$http"]}.call(this),function(){"use strict";function e(e,t){return{request:function(o){var n=e.getToken(t.getAppConfig().authTokenName);return n&&(o.headers=o.headers||{},o.headers.Authorization=n),o}}}angular.module("craft.auth.JwtTokenInterceptor",["craft.auth.token"]).factory("JwtTokenInterceptor",e),e.$inject=["TokenService","ConfigService"],angular.module("craft.auth.JwtTokenInterceptor").config(["$httpProvider",function(e){e.interceptors.push("JwtTokenInterceptor")}])}.call(this),function(){"use strict";angular.module("craft.auth.token",["craft.storage"]).factory("TokenService",["CraftStorageService",function(e){return{saveToken:function(t,o){e.set(t,o)},getToken:function(t){return e.get(t)},removeToken:function(t){e.remove(t)}}}])}.call(this);