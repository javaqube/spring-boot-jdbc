(function(){"use strict";function t(t){var e=angular.extend({});return e.getAppConfig=function(){return t.get("meta/app-config.json")},e}angular.module("craft.api.config",[]).factory("ConfigService",t),t.$inject=["$templateCache"]}).call(this),function(){"use strict";function t(){var t=angular.extend({});return t.strMimeType="application/octet-stream;charset=utf-8",t.setMimeType=function(t){this.strMimeType=t},t.isIE=function(){var t=navigator.userAgent.match(/(?:MSIE |Trident\/.*; rv:)(\d+)/);return!!t&&parseInt(t[1])},t.isSafari=function(){var t=navigator.userAgent.match("(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/");return!!t&&parseInt(t[2])},t.downloadFile=function(t,e){var n,r,o=document,a=o.createElement("a");if(r=this.isIE(),r&&r<10){var i=o.createElement("iframe");return document.body.appendChild(i),i.contentWindow.document.open("text/html","replace"),i.contentWindow.document.write("sep=,\r\n"+e),i.contentWindow.document.close(),i.contentWindow.focus(),i.contentWindow.document.execCommand("SaveAs",!0,t),document.body.removeChild(i),!0}if(navigator.msSaveBlob)return navigator.msSaveBlob(new Blob([e],{type:this.strMimeType}),t);if("download"in a){var c=new Blob([e],{type:this.strMimeType});n=URL.createObjectURL(c),a.setAttribute("download",t)}else n="data:"+this.strMimeType+","+encodeURIComponent(e),a.setAttribute("target","_blank");a.href=n,a.setAttribute("style","display:none;"),o.body.appendChild(a),setTimeout(function(){if(a.click)a.click();else if(document.createEvent){var t=document.createEvent("MouseEvents");t.initEvent("click",!0,!0),a.dispatchEvent(t)}o.body.removeChild(a)},this.delay)},t}angular.module("craft.api.download",[]).factory("DownloadService",t),t.$inject=[]}.call(this),function(t,e){"use strict";t.module("craft.api.cap",["craft.api.config","craft.api.download","craft.api.http.cap","craft.api.crud.cap"])}(angular,window),function(){"use strict";function t(t,e){var n=angular.extend({});return n.list=function(n){var r=e.getAppConfig().RootPath+"/repository/"+n+"/findAll";return t.get(r)},n.find=function(n,r){var o="params=["+JSON.stringify(r)+"]",a=e.getAppConfig().RootPath+"/repository/"+n+"/findById?"+o;return t.get(a)},n.findByCriteria=function(n,r,o){var a=e.getAppConfig().RootPath+"/repository/"+n+"/"+(r?r:"findAll")+(o?"?params="+o:"");return t.get(a,!1)},n.findByCriteriaPageable=function(n,r,o,a,i,c){var s=e.getAppConfig().RootPath+"/repository/"+n+"/"+(r?r:"findAll")+"/"+o+"/"+a+(i?"?params="+i:"")+(c?"&sort="+c:"");return t.get(s,!1)},n.update=function(n,r,o){var a=e.getAppConfig().RootPath+"/repository/"+n+"/"+r;"params="+JSON.stringify(o);return t.post(a,o)},n.create=function(n,r){var o=e.getAppConfig().RootPath+"/repository/"+n;return t.put(o,r)},n["delete"]=function(n,r){var o=e.getAppConfig().RootPath+"/repository/"+n+"/"+r;return t["delete"](o)},n.service=function(n,r){for(var o=e.getAppConfig().RootPath+"/service/"+n+"/"+r,a=new Array,i=arguments.length,c=2;c<i;c++)a.push(arguments[c]);var s="params="+JSON.stringify(a);return t.post(o,s)},n}angular.module("craft.api.crud.cap",[]),angular.module("craft.api.crud.cap").factory("CrudService",t),t.$inject=["HttpService","ConfigService"]}.call(this),function(){"use strict";function t(t,e){var n=angular.extend({});return n.get=function(t,n){var r=e({method:"GET",url:t,cache:!!n&&n});return this.handlePromise(r)},n.post=function(t,n){var r=e({withCredentials:!0,method:"POST",url:t,data:n});return this.handlePromise(r)},n.put=function(t,n){var r=e({method:"PUT",url:t,data:n});return this.handlePromise(r)},n["delete"]=function(t){var n=e({method:"DELETE",url:t});return this.handlePromise(n)},n.handlePromise=function(e){var n=t.defer();return e.success(function(t,e,r,o){"0"===t.errorCode?(console.log("response data==========================="),console.log(t),console.log("response data==========================="),n.resolve(t.data)):(console.log("response data==========================="),console.log(t),console.log("response data==========================="),n.reject(t.errorMsg))}).error(function(t,e,r,o){console.log("response data==========================="),console.log(t),console.log("response data==========================="),n.reject("request error with :"+e)}),n.promise},n}angular.module("craft.api.http.cap",[]).factory("HttpService",t),t.$inject=["$q","$http"]}.call(this);